1)	O cliente adquiriu um novo modelo de máquina de cartão de crédito e ela aceita as bandeiras
Visa, Master, Elo, Amex e Hiper e executa duas operações para cada bandeira débito e crédito. Quantos
testes serão necessários para validação dessa máquina e qual técnica a ser utilizada?

Resposta: Para uma abordagem mais completa e precisa para determinar o número de testes, teríamos que
levar em consideração os requisitos e as regras de negócio, como exemplo, transações parceladas. o número
máximo de parcelas permitidas e taxas de juros, se fosse incluído testes para transações parceladas,
o número de casos de teste aumentaria significativamente, pois cada bandeira pode ter diferentes políticas
de parcelamento. Levando em conta apenas o pagamento à vista, seria necessário no mínimo 20 testes
funcionais, os quais devem validar se a máquina é capaz de processar com sucesso tanto transações de
débito quanto de crédito, abrangendo cenários de êxito e insucesso. As técnicas utilizadas seriam Teste
Funcional para garantir que a máquina seja capaz de processar transações com sucesso. Teste de Integração
para garantir que a máquina se integre perfeitamente com os sistemas de processamento de pagamentos.
Teste de Estresse para verificar como a máquina se comporta com um grande número de transações simultâneas
e Teste de Segurança.

2)	A bandeira Visa disponibilizou um novo range de bin´s no mercado que possui seis dígitos 232425 a
232460. Quais os testes deverão ser feitos desse range de bins para confirmar que está funcionando?
a) 230000,232425,232460
b) 0,232425,232460,240000
c) 232425,232460
d) 232424,232425,232459,232460,232461

Resposta:
a) Verificar se transações com o bin fora do range (230000) são rejeitadas, se transações com os bin´s
dentro do range (232425 a 232460) são autorizadas e se o último bin (232460) é aceito.

b) Testar se transações com o bin inválido (0) são rejeitadas, se os bin´s dentro do range (232425 e 232460)
são processados corretamente e se transações com o bin fora do range (240000) são rejeitadas.

c) Confirmar se os bin´s dentro do range (232425 e 232460) são aceitos corretamente.

d) Testar se transações com bin´s imediatamente antes (232424), dentro do range (232425 e 232460),
imediatamente após (232461) e fora do range (232459) são processadas conforme o esperado.

3)	Cite uma abordagem desenvolvimento ágil e explique-a, responda em suas palavras.

Resposta: Uma abordagem de desenvolvimento ágil muito conhecida é o Scrum. Na metodologia Scrum, o
trabalho é dividido em sprints, onde são definidas as metas e o que será desenvolvido. Durante o sprint,
a equipe se reúne diariamente em daily’s para discutir o progresso e os impedimentos.

4)	O que é CI/CD?

Resposta: É uma em que as alterações de código são frequentemente integradas a um repositório, e o processo
de build, testes e implantação é automatizado.

5)	O que é TDD, BDD e ATDD e quando são aplicadas?

Resposta:

TDD é uma prática em que os testes automatizados são escritos antes do desenvolvimento do código de
produção. O TDD é aplicado durante a fase de implementação de funcionalidades.


ATDD É uma prática que os testes de aceitação são escritos antes do código de produção, assegurando que
o software atenda aos requisitos do cliente. O ATDD é aplicado durante a fase de definição de requisitos e desenvolvimento de funcionalidades.


BDD É uma abordagem de desenvolvimento de software que se concentra na comunicação entre os membros da
equipe e no comportamento esperado do sistema. O BDD é aplicado ao longo de todo o ciclo de cida
desenvolvimento de software.

6)	Cite uma heurística de testes utilizada para testes de front e de back e explique-as

Resposta: A heurística dos "3 As" - Arrange, Act, Assert - é uma abordagem comum para testes de front-end
e back-end. No "Arrange", o ambiente de teste é configurado. No "Act", a ação a ser testada é executada.
No "Assert", os resultados da ação são verificados. Essa estrutura ajuda a garantir uma abordagem
sistemática e clara na criação de casos de teste automatizados.
Parte superior do formulário

7)	Cite ferramentas de testes automatizados para Desktop, Web, API´s e mobile.

Desktop:
	TestComplete
Web:
	Selenium WebDriver
	Cypress
API´s:
	Postman
	SoapUI
	Rest-Assured
	JMeter
Mobile:
	Appium
